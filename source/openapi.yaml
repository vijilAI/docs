openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /healthz:
    get:
      tags:
        - Monitoring
      summary: Health Check
      description: Endpoint for health check. Returns the status of the service.
      operationId: health_check_healthz_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Health Check Healthz Get
  /metrics:
    get:
      tags:
        - Monitoring
      summary: Metrics
      operationId: metrics_metrics_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
  /v1/users:
    get:
      tags:
        - Users
      summary: Get Users By Ids
      operationId: get_users_by_ids_v1_users_get
      security:
        - HTTPBearer: []
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/users/me:
    get:
      tags:
        - Users
      summary: Get Current User
      operationId: get_current_user_v1_users_me_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
        - HTTPBearer: []
  /v1/users/{id}:
    get:
      tags:
        - Users
      summary: Get User By Id
      operationId: get_user_by_id_v1_users__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/users/{id}/set-role:
    post:
      tags:
        - Users
      summary: Set Role
      operationId: set_role_v1_users__id__set_role_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserRoleRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/invites/{invite_id}:
    get:
      tags:
        - Invite
      summary: Get Invite By Id
      operationId: get_invite_by_id_v1_invites__invite_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            type: string
            title: Invite Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Invite
      summary: Delete Invite
      operationId: delete_invite_v1_invites__invite_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            type: string
            title: Invite Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Invite V1 Invites  Invite Id  Delete
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/invites/team/{team_id}:
    get:
      tags:
        - Invite
      summary: Get Invite By Team
      operationId: get_invite_by_team_v1_invites_team__team_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            title: Team Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/invites/status/{status}:
    get:
      tags:
        - Invite
      summary: Get Invite By Status
      operationId: get_invite_by_status_v1_invites_status__status__get
      security:
        - HTTPBearer: []
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            title: Status
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/invites:
    post:
      tags:
        - Invite
      summary: Create Invite
      operationId: create_invite_v1_invites_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInviteRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/invites/{invite_id}/accept:
    post:
      tags:
        - Invite
      summary: Accept Invite
      operationId: accept_invite_v1_invites__invite_id__accept_post
      security:
        - HTTPBearer: []
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            type: string
            title: Invite Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/invites/{invite_id}/decline:
    post:
      tags:
        - Invite
      summary: Decline Invite
      operationId: decline_invite_v1_invites__invite_id__decline_post
      security:
        - HTTPBearer: []
      parameters:
        - name: invite_id
          in: path
          required: true
          schema:
            type: string
            title: Invite Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/events:
    post:
      tags:
        - Events
      summary: Post Event
      operationId: post_event_v1_events_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/hubs:
    get:
      tags:
        - Hub
      summary: Get Hubs
      operationId: get_hubs_v1_hubs_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HubResponse'
                type: array
                title: Response Get Hubs V1 Hubs Get
      security:
        - HTTPBearer: []
  /v1/hubs/cost:
    post:
      tags:
        - Hub
      summary: Compute Cost
      operationId: compute_cost_v1_hubs_cost_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCost'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/api-keys:
    post:
      tags:
        - API Key
      summary: Create Api Key
      operationId: create_api_key_v1_api_keys_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - API Key
      summary: Get Api Keys
      operationId: get_api_keys_v1_api_keys_get
      security:
        - HTTPBearer: []
      parameters:
        - name: hubs
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Hubs
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyResponse'
                title: Response Get Api Keys V1 Api Keys Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/api-keys/test:
    post:
      tags:
        - API Key
      summary: Test Api Key
      operationId: test_api_key_v1_api_keys_test_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyTestRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyTestResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/api-keys/{id}:
    put:
      tags:
        - API Key
      summary: Update Api Key
      operationId: update_api_key_v1_api_keys__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - API Key
      summary: Delete Api Key
      operationId: delete_api_key_v1_api_keys__id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Api Key V1 Api Keys  Id  Delete
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - API Key
      summary: Get Api Key By Id
      operationId: get_api_key_by_id_v1_api_keys__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ApiKeyResponse'
                  - type: "null"
                title: Response Get Api Key By Id V1 Api Keys  Id  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/api-keys/{id}/models:
    get:
      tags:
        - API Key
      summary: List Models For Key
      operationId: list_models_for_key_v1_api_keys__id__models_get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations:
    get:
      tags:
        - Evaluation
      summary: Get Evaluations
      operationId: get_evaluations_v1_evaluations_get
      security:
        - HTTPBearer: []
      parameters:
        - name: user_email
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: User Email
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Status
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            default: created_at
            title: Sort By
        - name: sort_order
          in: query
          required: false
          schema:
            type: string
            default: DESC
            title: Sort Order
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Name
        - name: hub
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Hub
        - name: model
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Model
        - name: created_at
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            title: Created At
        - name: completed_at
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            title: Completed At
        - name: tags
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Tags
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Evaluation
      summary: Create Evaluation
      operationId: create_evaluation_v1_evaluations_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationCreatedResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{evaluation_id}/response-errors:
    get:
      tags:
        - Evaluation
      summary: Get Response Errors
      operationId: get_response_errors_v1_evaluations__evaluation_id__response_errors_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: path
          required: true
          schema:
            type: string
            title: Evaluation Id
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: Maximum number of error types to return
            default: 10
            title: Limit
          description: Maximum number of error types to return
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponseErrorsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}:
    get:
      tags:
        - Evaluation
      summary: Get Evaluation
      operationId: get_evaluation_v1_evaluations__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponseWithMetrics'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Evaluation
      summary: Update Evaluation Name
      operationId: update_evaluation_name_v1_evaluations__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEvaluationRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponseWithMetrics'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/metadata/{id}:
    get:
      tags:
        - Evaluation
      summary: Get Evaluation With Metadata
      operationId: get_evaluation_with_metadata_v1_evaluations_metadata__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponseWithMetrics'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/score:
    post:
      tags:
        - Evaluation
      summary: Calculate Evaluation Score
      operationId: calculate_evaluation_score_v1_evaluations__id__score_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationScore'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/delete:
    post:
      tags:
        - Evaluation
      summary: Delete Evaluation
      operationId: delete_evaluation_v1_evaluations__id__delete_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEvaluationResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/cancel:
    post:
      tags:
        - Evaluation
      summary: Cancel Evaluation
      operationId: cancel_evaluation_v1_evaluations__id__cancel_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEvaluationResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/reports:
    post:
      tags:
        - Evaluation
      summary: Create Evaluation Report
      operationId: create_evaluation_report_v1_evaluations__id__reports_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationReportCreationRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationReportResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/reports/{report_id}:
    get:
      tags:
        - Evaluation
      summary: Get Evaluation Report
      operationId: get_evaluation_report_v1_evaluations__id__reports__report_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: report_id
          in: path
          required: true
          schema:
            type: string
            title: Report Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationReportResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Evaluation
      summary: Delete Evaluation Report
      operationId: delete_evaluation_report_v1_evaluations__id__reports__report_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: report_id
          in: path
          required: true
          schema:
            type: string
            title: Report Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Evaluation Report V1 Evaluations  Id  Reports  Report Id  Delete
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluations/{id}/list-reports:
    get:
      tags:
        - Evaluation
      summary: Get Report Ids For Evaluation
      operationId: get_report_ids_for_evaluation_v1_evaluations__id__list_reports_get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Status
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportIdsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness:
    get:
      tags:
        - Harness
      summary: Get Harnesses
      operationId: get_harnesses_v1_harness_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: query
          required: true
          schema:
            type: string
            title: Evaluation Id
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness/{id}:
    get:
      tags:
        - Harness
      summary: Get Harness By Id
      operationId: get_harness_by_id_v1_harness__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-creation-agent/chat:
    post:
      tags:
        - Harness
      summary: Post Harness Creation Chat
      description: Forwards request to the harness_creation_domain to get a response or trigger a new harness creation
      operationId: post_harness_creation_chat_v1_harness_creation_agent_chat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HarnessCreationChatRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessCreationChatResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/harness-creation-agent:
    post:
      tags:
        - Harness
      summary: Custom Harness Creation
      operationId: custom_harness_creation_v1_harness_creation_agent_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualCustomHarnessCreationRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualCustomHarnessCreationResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/harness-configs:
    post:
      tags:
        - Harness
      summary: Create Harness
      description: |-
        Creates a new harness configuration for the current user and team.
        - Validates write permissions and user authentication.
        - Retrieves the current user from the authentication token.
        - Constructs the harness configuration data from the request.
        - Delegates creation to the harness_creation_domain.
        Returns the created HarnessConfig object.
      operationId: create_harness_v1_harness_configs_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHarnessConfigRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfig'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Harness
      summary: Get Harness Configs
      description: |-
        List harness configs, optionally filtered and sorted.
        sort_by: Field to sort by. Allowed: 'created_at', 'name', 'id'.
      operationId: get_harness_configs_v1_harness_configs_get
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_type
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Harness Type
        - name: with_stages
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: "null"
            default: false
            title: With Stages
        - name: user_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: User Id
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 1
              - type: "null"
            default: 100
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: "null"
            title: Offset
        - name: version
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Version
        - name: sort_by
          in: query
          required: false
          schema:
            enum:
              - created_at
              - name
              - id
            type: string
            default: created_at
            title: Sort By
        - name: sort_order
          in: query
          required: false
          schema:
            type: string
            default: DESC
            title: Sort Order
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/versions:
    get:
      tags:
        - Harness
      summary: Get Harness Config Versions
      operationId: get_harness_config_versions_v1_harness_configs_versions_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigVersionsResponse'
      security:
        - HTTPBearer: []
  /v1/harness-configs/{harness_config_id}:
    get:
      tags:
        - Harness
      summary: Get Harness Config By Id
      operationId: get_harness_config_by_id_v1_harness_configs__harness_config_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: version
          in: query
          required: true
          schema:
            type: string
            title: Version
        - name: with_stages
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: "null"
            default: false
            title: With Stages
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Harness
      summary: Delete Harness Config
      operationId: delete_harness_config_v1_harness_configs__harness_config_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: version
          in: query
          required: true
          schema:
            type: string
            title: Version
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/{harness_config_id}/versions/{version}/archive:
    put:
      tags:
        - Harness
      summary: Archive Harness Config
      operationId: archive_harness_config_v1_harness_configs__harness_config_id__versions__version__archive_put
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: version
          in: path
          required: true
          schema:
            type: string
            title: Version
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfig'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/custom/eval-config-inputs:
    get:
      tags:
        - Harness
      summary: Get Eval Config Inputs
      description: Returns a model_dump of the CustomEvalConfigInputs class
      operationId: get_eval_config_inputs_v1_harness_configs_custom_eval_config_inputs_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Eval Config Inputs V1 Harness Configs Custom Eval Config Inputs Get
      security:
        - HTTPBearer: []
  /v1/harness-configs/{harness_config_id}/stages:
    post:
      tags:
        - Harness
      summary: Create
      operationId: create_v1_harness_configs__harness_config_id__stages_post
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateStageRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigStage'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Harness
      summary: Get Stages For Harness Config
      description: Get all stages for a harness config
      operationId: get_stages_for_harness_config_v1_harness_configs__harness_config_id__stages_get
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStagesResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/{harness_config_id}/stages/{staging_id}:
    get:
      tags:
        - Harness
      summary: Get Stage By Id
      description: Get a stage by ID
      operationId: get_stage_by_id_v1_harness_configs__harness_config_id__stages__staging_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigStage'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Harness
      summary: Update Stage
      operationId: update_stage_v1_harness_configs__harness_config_id__stages__staging_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateStageRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarnessConfigStage'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Harness
      summary: Delete Stage
      description: Delete a stage by ID
      operationId: delete_stage_v1_harness_configs__harness_config_id__stages__staging_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Stage V1 Harness Configs  Harness Config Id  Stages  Staging Id  Delete
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/{harness_config_id}/stages/{staging_id}/files:
    post:
      tags:
        - Harness
      summary: Request File Upload
      description: Request a file upload URL for a stage
      operationId: request_file_upload_v1_harness_configs__harness_config_id__stages__staging_id__files_post
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Harness
      summary: Get Stage Files
      description: Get all files associated with a stage
      operationId: get_stage_files_v1_harness_configs__harness_config_id__stages__staging_id__files_get
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileUploadsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/harness-configs/{harness_config_id}/stages/{staging_id}/files/{file_id}:
    delete:
      tags:
        - Harness
      summary: Delete Stage File
      description: Delete a file from a stage
      operationId: delete_stage_file_v1_harness_configs__harness_config_id__stages__staging_id__files__file_id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: harness_config_id
          in: path
          required: true
          schema:
            type: string
            title: Harness Config Id
        - name: staging_id
          in: path
          required: true
          schema:
            type: string
            title: Staging Id
        - name: file_id
          in: path
          required: true
          schema:
            type: string
            title: File Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Stage File V1 Harness Configs  Harness Config Id  Stages  Staging Id  Files  File Id  Delete
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/scenarios:
    get:
      tags:
        - Scenario
      summary: Get Scenarios
      operationId: get_scenarios_v1_scenarios_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: query
          required: true
          schema:
            type: string
            title: Evaluation Id
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/scenarios/{id}:
    get:
      tags:
        - Scenario
      summary: Get Scenario By Id
      operationId: get_scenario_by_id_v1_scenarios__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/scenario-configs:
    get:
      tags:
        - Scenario
      summary: Get Scenario Config By Ids
      operationId: get_scenario_config_by_ids_v1_scenario_configs_get
      security:
        - HTTPBearer: []
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            title: Ids
        - name: version
          in: query
          required: false
          schema:
            type: string
            title: Version
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioConfigResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/probes:
    get:
      tags:
        - Probe
      summary: Get Probes
      operationId: get_probes_v1_probes_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: query
          required: true
          schema:
            type: string
            title: Evaluation Id
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/probes/{id}:
    get:
      tags:
        - Probe
      summary: Get Probe By Id
      operationId: get_probe_by_id_v1_probes__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/probe-configs:
    get:
      tags:
        - Probe
      summary: Get Probe Configs
      operationId: get_probe_configs_v1_probe_configs_get
      security:
        - HTTPBearer: []
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            title: Ids
        - name: version
          in: query
          required: false
          schema:
            type: string
            title: Version
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeConfigResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/probe-configs/{id}:
    put:
      tags:
        - Probe
      summary: Update Probe Configs
      operationId: update_probe_configs_v1_probe_configs__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProbeConfigBody'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeConfig'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/prompts:
    post:
      tags:
        - Prompt
      summary: Create Prompt
      operationId: create_prompt_v1_prompts_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePromptRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Prompt
      summary: Get Prompts
      operationId: get_prompts_v1_prompts_get
      security:
        - HTTPBearer: []
      parameters:
        - name: ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            title: Ids
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/prompts/{id}:
    put:
      tags:
        - Prompt
      summary: Update Prompt
      operationId: update_prompt_v1_prompts__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPromptRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Prompt
      summary: Get Prompt By Id
      operationId: get_prompt_by_id_v1_prompts__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: prompt_id
          in: query
          required: true
          schema:
            type: string
            title: Prompt Id
        - name: team_id
          in: query
          required: true
          schema:
            type: string
            title: Team Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/prompts/search/find:
    get:
      tags:
        - Prompt
      summary: Search Prompts
      operationId: search_prompts_v1_prompts_search_find_get
      security:
        - HTTPBearer: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
            title: Query
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Offset
        - name: nearest_neighbors
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
            title: Nearest Neighbors
        - name: total_limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 100
            title: Total Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/tests/{id}:
    get:
      tags:
        - Test
      summary: Get Test By Id
      operationId: get_test_by_id_v1_tests__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VijilTest'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/tests:
    get:
      tags:
        - Test
      summary: Get Tests
      operationId: get_tests_v1_tests_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Evaluation Id
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
        - name: probe_ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Probe Ids
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Status
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: The maximum number of items to return
            default: 1000
            title: Limit
          description: The maximum number of items to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: The number of items to skip before starting to collect the result set
            default: 0
            title: Offset
          description: The number of items to skip before starting to collect the result set
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/responses/{id}:
    get:
      tags:
        - Response
      summary: Get Response By Id
      operationId: get_response_by_id_v1_responses__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/responses:
    get:
      tags:
        - Response
      summary: Get Responses
      operationId: get_responses_v1_responses_get
      security:
        - HTTPBearer: []
      parameters:
        - name: evaluation_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Evaluation Id
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Status
        - name: ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Ids
        - name: probe_ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Probe Ids
        - name: prompt_ids
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: "null"
            title: Prompt Ids
        - name: is_visible
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Is Visible
        - name: order_by
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Order By
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: The maximum number of items to return
            default: 1000
            title: Limit
          description: The maximum number of items to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            description: The number of items to skip before starting to collect the result set
            default: 0
            title: Offset
          description: The number of items to skip before starting to collect the result set
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponsesResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/detectors:
    get:
      tags:
        - Detector
      summary: Get Detectors
      operationId: get_detectors_v1_detectors_get
      security:
        - HTTPBearer: []
      parameters:
        - name: version
          in: query
          required: true
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Version
        - name: ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            title: Ids
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorResponses'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/detectors/{id}:
    get:
      tags:
        - Detector
      summary: Get Detector By Id
      operationId: get_detector_by_id_v1_detectors__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: version
          in: query
          required: true
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Version
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detector'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/leaderboard:
    get:
      tags:
        - Leaderboard
      summary: Get Leaderboard
      operationId: get_leaderboard_v1_leaderboard_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LeaderboardEntry'
                type: array
                title: Response Get Leaderboard V1 Leaderboard Get
      security:
        - HTTPBearer: []
  /v1/teams:
    get:
      tags:
        - Teams
      summary: Get Teams
      operationId: get_teams_v1_teams_get
      security:
        - HTTPBearer: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamResponse'
                title: Response Get Teams V1 Teams Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Teams
      summary: Create Team
      operationId: create_team_v1_teams_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/teams/{id}:
    get:
      tags:
        - Teams
      summary: Get Team By Id
      operationId: get_team_by_id_v1_teams__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Teams
      summary: Update Team
      operationId: update_team_v1_teams__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Teams
      summary: Delete Team
      operationId: delete_team_v1_teams__id__delete
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/teams/{id}/users:
    get:
      tags:
        - Teams
      summary: Get Users By Team Id
      operationId: get_users_by_team_id_v1_teams__id__users_get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Status
        - name: team_role
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Team Role
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponseWithPaging'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/evaluation-estimate:
    post:
      tags:
        - Evaluation
      summary: Calculate Evaluation Estimate
      operationId: calculate_evaluation_estimate_v1_evaluation_estimate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostEstimate'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/results-feedback/{id}:
    get:
      tags:
        - User Feedback
      summary: Get Feedback By Id
      operationId: get_feedback_by_id_v1_results_feedback__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsFeedbackResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - User Feedback
      summary: Update Feedback
      operationId: update_feedback_v1_results_feedback__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedbackRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsFeedbackResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/results-feedback:
    get:
      tags:
        - User Feedback
      summary: Get Feedback
      operationId: get_feedback_v1_results_feedback_get
      security:
        - HTTPBearer: []
      parameters:
        - name: response_id
          in: query
          required: true
          schema:
            type: string
            title: Response Id
        - name: detector_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Detector Id
        - name: prompt_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Prompt Id
        - name: created_by
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Created By
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsFeedbackResponse'
                title: Response Get Feedback V1 Results Feedback Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - User Feedback
      summary: Create Feedback
      operationId: create_feedback_v1_results_feedback_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackRequest'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsFeedbackResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/detections/{id}:
    get:
      tags:
        - Detector
      summary: Get Detection By Id
      operationId: get_detection_by_id_v1_detections__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/detections:
    post:
      tags:
        - Detector
      summary: Create Detection
      operationId: create_detection_v1_detections_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/chat_complete:
    post:
      tags:
        - Chat Completion
      summary: Chat Complete
      operationId: chat_complete_v1_chat_complete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/harness-config-stages:
    get:
      tags:
        - Harness Staging
      summary: Get Stages
      description: Get all stages for a harness config with pagination
      operationId: get_stages_v1_harness_config_stages_get
      security:
        - HTTPBearer: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  enum:
                    - CREATED
                    - STARTING
                    - IN_PROGRESS
                    - READING
                    - CREATING
                    - SAVING
                    - COMPLETED
                    - ERROR
                  type: string
              - type: "null"
            enum:
              - CREATED
              - IN_PROGRESS
              - COMPLETED
              - ERROR
            title: Status
        - name: created_by
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Created By
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000
            minimum: 1
            default: 100
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStagesResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/attackers:
    get:
      tags:
        - Playground Attacker
      summary: Get Attackers
      description: |-
        Returns a list of AttackerDescriptions, count of total attackers
            AttackerDescription:
                id: str
                name: str
                description: str
      operationId: get_attackers_v1_attackers_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                prefixItems:
                  - items:
                      $ref: '#/components/schemas/AttackerDescription'
                    type: array
                  - type: integer
                type: array
                maxItems: 2
                minItems: 2
                title: Response Get Attackers V1 Attackers Get
      security:
        - HTTPBearer: []
    post:
      tags:
        - Playground Attacker
      summary: Execute Attack
      operationId: execute_attack_v1_attackers_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaygroundAttackInput'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundAttackResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/playgrounds:
    get:
      tags:
        - Playgrounds
      summary: List Playgrounds
      operationId: list_playgrounds_v1_playgrounds_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlaygroundsResponse'
                type: array
                title: Response List Playgrounds V1 Playgrounds Get
      security:
        - HTTPBearer: []
    post:
      tags:
        - Playgrounds
      summary: Create Playground
      operationId: create_playground_v1_playgrounds_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaygroundInput'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /v1/playgrounds/{id}:
    get:
      tags:
        - Playgrounds
      summary: Get Playground By Id
      operationId: get_playground_by_id_v1_playgrounds__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Playgrounds
      summary: Update Playground
      operationId: update_playground_v1_playgrounds__id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlaygroundInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundsResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/playgrounds/{id}/agent-sessions:
    post:
      tags:
        - Playgrounds
      summary: Create Playground Agent Session
      operationId: create_playground_agent_session_v1_playgrounds__id__agent_sessions_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaygroundAgentSessionInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundAgentSessionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Playgrounds
      summary: Get Playground Agent Sessions By Playground Id
      operationId: get_playground_agent_sessions_by_playground_id_v1_playgrounds__id__agent_sessions_get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaygroundAgentSessionResponse'
                title: Response Get Playground Agent Sessions By Playground Id V1 Playgrounds  Id  Agent Sessions Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/playgrounds/{id}/agent-sessions/{agent_session_id}:
    get:
      tags:
        - Playgrounds
      summary: Get Playground Agent Session By Id
      operationId: get_playground_agent_session_by_id_v1_playgrounds__id__agent_sessions__agent_session_id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: agent_session_id
          in: path
          required: true
          schema:
            type: string
            title: Agent Session Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundAgentSessionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Playgrounds
      summary: Update Playground Agent Session
      operationId: update_playground_agent_session_v1_playgrounds__id__agent_sessions__agent_session_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: agent_session_id
          in: path
          required: true
          schema:
            type: string
            title: Agent Session Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlaygroundAgentSessionInput'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundAgentSessionResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/playgrounds/{id}/messages:
    post:
      tags:
        - Playgrounds
      summary: Create Playground Message
      operationId: create_playground_message_v1_playgrounds__id__messages_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlaygroundMessage'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaygroundMessageResponse'
                title: Response Create Playground Message V1 Playgrounds  Id  Messages Post
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - Playgrounds
      summary: Get Playground Messages
      operationId: get_playground_messages_v1_playgrounds__id__messages_get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: agent_session_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Agent Session Id
        - name: message_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Message Id
        - name: order_by
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            default: created_at
            title: Order By
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            default: 100
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            default: 0
            title: Offset
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlaygroundMessageResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/playgrounds/{id}/messages/{message_id}:
    put:
      tags:
        - Playgrounds
      summary: Update Playground Message
      operationId: update_playground_message_v1_playgrounds__id__messages__message_id__put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
        - name: message_id
          in: path
          required: true
          schema:
            type: string
            title: Message Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlaygroundMessage'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaygroundMessageResponse'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/local-eval-token:
    get:
      tags:
        - Ngrok Token Issuer
      summary: Get Ngrok Token
      operationId: get_ngrok_token_v1_local_eval_token_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NgrokTokenResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Ngrok Token Issuer
      summary: Delete Ngrok Token
      operationId: delete_ngrok_token_v1_local_eval_token_delete
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Delete Ngrok Token V1 Local Eval Token Delete
      security:
        - HTTPBearer: []
  /v1/agent-configurations/{id}:
    get:
      tags:
        - Agent Configuration
      summary: Get Agent Configuration By Id
      operationId: get_agent_configuration_by_id_v1_agent_configurations__id__get
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentConfiguration'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/agent-configurations:
    get:
      tags:
        - Agent Configuration
      summary: Get Agent Configurations
      operationId: get_agent_configurations_v1_agent_configurations_get
      security:
        - HTTPBearer: []
      parameters:
        - name: statuses
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            default:
              - active
            title: Statuses
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentConfiguration'
                title: Response Get Agent Configurations V1 Agent Configurations Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Agent Configuration
      summary: Create Agent Configuration
      operationId: create_agent_configuration_v1_agent_configurations_post
      security:
        - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentConfiguration'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentConfiguration'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/agent-configurations/{id}/archive:
    put:
      tags:
        - Agent Configuration
      summary: Archive Agent Configuration
      operationId: archive_agent_configuration_v1_agent_configurations__id__archive_put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentConfiguration'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/agent-configurations/{id}/update:
    put:
      tags:
        - Agent Configuration
      summary: Update Agent Configuration
      operationId: update_agent_configuration_v1_agent_configurations__id__update_put
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentConfigurationUpdate'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentConfiguration'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/agent-configurations/{id}/files:
    post:
      tags:
        - Agent Configuration
      summary: Create File Upload
      operationId: create_file_upload_v1_agent_configurations__id__files_post
      security:
        - HTTPBearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpload'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    APIKeyTestResponse:
      properties:
        status:
          type: string
          title: Status
        rate_limit:
          anyOf:
            - type: integer
            - type: "null"
          title: Rate Limit
        interval:
          anyOf:
            - type: integer
            - type: "null"
          title: Interval
      type: object
      required:
        - status
      title: APIKeyTestResponse
    AWSHubConfig:
      properties:
        region:
          type: string
          title: Region
        access_key:
          type: string
          title: Access Key
        secret_access_key:
          type: string
          title: Secret Access Key
      type: object
      required:
        - region
        - access_key
        - secret_access_key
      title: AWSHubConfig
    AgentConfiguration:
      properties:
        agent_name:
          type: string
          title: Agent Name
        model_name:
          type: string
          title: Model Name
        agent_url:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Url
          default: ""
        hub:
          anyOf:
            - type: string
            - type: "null"
          title: Hub
          default: custom
        team_id:
          type: string
          title: Team Id
          default: ""
        created_by:
          anyOf:
            - type: string
            - type: "null"
          title: Created By
        api_key_id:
          anyOf:
            - type: string
            - type: "null"
          title: Api Key Id
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
        id:
          type: string
          title: Id
        status:
          type: string
          enum:
            - creating
            - active
            - archived
          title: Status
          default: active
        created_at:
          type: integer
          title: Created At
        hub_config:
          anyOf:
            - $ref: '#/components/schemas/AWSHubConfig'
            - $ref: '#/components/schemas/GCPHubConfig'
            - $ref: '#/components/schemas/DigitalOceanHubConfig'
            - $ref: '#/components/schemas/BedrockAgentCustomHubConfig'
            - type: "null"
          title: Hub Config
      type: object
      required:
        - agent_name
        - model_name
      title: AgentConfiguration
    AgentConfigurationUpdate:
      properties:
        status:
          anyOf:
            - type: string
            - type: "null"
          title: Status
        agent_name:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Name
        agent_url:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Url
        model_name:
          anyOf:
            - type: string
            - type: "null"
          title: Model Name
        api_key_id:
          anyOf:
            - type: string
            - type: "null"
          title: Api Key Id
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
      type: object
      title: AgentConfigurationUpdate
    AgentParams:
      properties:
        temperature:
          anyOf:
            - type: number
            - type: string
            - type: "null"
          title: Temperature
          default: "1.00"
        top_p:
          anyOf:
            - type: number
            - type: string
            - type: "null"
          title: Top P
          default: "0.99"
        generations:
          type: integer
          title: Generations
          default: 1
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        timeout:
          anyOf:
            - type: number
            - type: "null"
          title: Timeout
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
      type: object
      title: AgentParams
    ApiKeyResponse:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        hub:
          type: string
          enum:
            - openai
            - anthropic
            - together
            - mistral
            - fireworks
            - nvidia
            - vertex
            - bedrock
            - bedrock_custom
            - digitalocean
            - azure
            - custom
            - openrouter
            - bedrockAgents
          title: Hub
        rate_limit_per_interval:
          type: integer
          title: Rate Limit Per Interval
        rate_limit_interval:
          type: integer
          title: Rate Limit Interval
        display_value:
          type: string
          title: Display Value
        hub_config:
          anyOf:
            - $ref: '#/components/schemas/HubConfigResponse'
            - type: "null"
        user_id:
          anyOf:
            - type: string
            - type: "null"
          title: User Id
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
        status:
          type: string
          title: Status
          default: active
      type: object
      required:
        - id
        - name
        - hub
        - rate_limit_per_interval
        - rate_limit_interval
        - display_value
      title: ApiKeyResponse
    ApiKeyTestRequest:
      properties:
        hub:
          type: string
          enum:
            - openai
            - anthropic
            - together
            - mistral
            - fireworks
            - nvidia
            - vertex
            - bedrock
            - bedrock_custom
            - digitalocean
            - azure
            - custom
            - openrouter
            - bedrockAgents
          title: Hub
        value:
          type: string
          title: Value
        url:
          anyOf:
            - type: string
            - type: "null"
          title: Url
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
        hub_config:
          anyOf:
            - $ref: '#/components/schemas/AWSHubConfig'
            - $ref: '#/components/schemas/GCPHubConfig'
            - $ref: '#/components/schemas/DigitalOceanHubConfig'
            - type: "null"
          title: Hub Config
      type: object
      required:
        - hub
        - value
      title: ApiKeyTestRequest
    AttackerDescription:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
      type: object
      required:
        - id
        - name
        - description
      title: AttackerDescription
      description: Attacker Description
    BedrockAgentCustomHubConfig:
      properties:
        agent_id:
          type: string
          title: Agent Id
        agent_alias_id:
          type: string
          title: Agent Alias Id
      type: object
      required:
        - agent_id
        - agent_alias_id
      title: BedrockAgentCustomHubConfig
    CancelEvaluationResponse:
      properties:
        evaluation_id:
          type: string
          title: Evaluation Id
        status:
          type: string
          title: Status
        message:
          type: string
          title: Message
      type: object
      required:
        - evaluation_id
        - status
        - message
      title: CancelEvaluationResponse
    CategorizedFileUpload:
      properties:
        created_by:
          type: string
          title: Created By
        team_id:
          type: string
          title: Team Id
        id:
          type: string
          title: Id
        created_at:
          type: integer
          title: Created At
        file_name:
          anyOf:
            - type: string
            - type: "null"
          title: File Name
        file_type:
          anyOf:
            - type: string
            - type: "null"
          title: File Type
        file_size:
          anyOf:
            - type: integer
            - type: "null"
          title: File Size
        upload_url:
          anyOf:
            - type: string
            - type: "null"
          title: Upload Url
        upload_expiration:
          anyOf:
            - type: integer
            - type: "null"
          title: Upload Expiration
        provider:
          anyOf:
            - type: string
            - type: "null"
          title: Provider
        checksum:
          anyOf:
            - type: string
            - type: "null"
          title: Checksum
        object_key:
          anyOf:
            - type: string
            - type: "null"
          title: Object Key
        is_verified:
          type: boolean
          title: Is Verified
          default: false
        verified_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Verified At
        category:
          type: string
          enum:
            - AGENT_POLICY
            - KNOWLEDGE_BASE
            - FUNCTION_ROUTE
            - PERSONA
          title: Category
          default: AGENT_POLICY
      type: object
      required:
        - created_by
        - team_id
      title: CategorizedFileUpload
    ChatResponseTypeEnum:
      type: string
      enum:
        - continue
        - end
        - error
      title: ChatResponseTypeEnum
    CompletionRequest:
      properties:
        prompt:
          type: string
          title: Prompt
        completion_params:
          $ref: '#/components/schemas/CompletionRequestParams'
        system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: System Prompt
        prompt_role:
          type: string
          enum:
            - user
            - assistant
          title: Prompt Role
          default: user
        messages:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: "null"
          title: Messages
      type: object
      required:
        - prompt
        - completion_params
      title: CompletionRequest
    CompletionRequestParams:
      properties:
        api_key:
          type: string
          title: Api Key
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        url:
          anyOf:
            - type: string
            - type: "null"
          title: Url
        timeout:
          anyOf:
            - type: integer
            - type: "null"
          title: Timeout
          default: 90
        max_retries:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Retries
          default: 5
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
          default: 1
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
          default: 0.99
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        generations:
          anyOf:
            - type: integer
            - type: "null"
          title: Generations
          default: 1
      type: object
      required:
        - api_key
        - hub
        - model
      title: CompletionRequestParams
    CompletionResponse:
      properties:
        prompt:
          type: string
          title: Prompt
        response:
          items:
            type: string
          type: array
          title: Response
        token_count:
          $ref: '#/components/schemas/TokenCount'
      type: object
      required:
        - prompt
        - response
        - token_count
      title: CompletionResponse
    CostEstimate:
      properties:
        cost:
          type: string
          title: Cost
        bill_for_tokens:
          type: boolean
          title: Bill For Tokens
        total_credits:
          type: integer
          title: Total Credits
        token_credits:
          type: integer
          title: Token Credits
        outcome_credits:
          type: integer
          title: Outcome Credits
        token_count:
          $ref: '#/components/schemas/TokenCount'
      type: object
      required:
        - cost
        - bill_for_tokens
        - total_credits
        - token_credits
        - outcome_credits
        - token_count
      title: CostEstimate
    CostRequest:
      properties:
        hub_name:
          type: string
          title: Hub Name
        model_name:
          type: string
          title: Model Name
        input_token_count:
          type: integer
          title: Input Token Count
        output_token_count:
          type: integer
          title: Output Token Count
      type: object
      required:
        - hub_name
        - model_name
        - input_token_count
        - output_token_count
      title: CostRequest
    CreateApiKeyRequest:
      properties:
        name:
          type: string
          title: Name
        hub:
          type: string
          enum:
            - openai
            - anthropic
            - together
            - mistral
            - fireworks
            - nvidia
            - vertex
            - bedrock
            - bedrock_custom
            - digitalocean
            - azure
            - custom
            - openrouter
            - bedrockAgents
          title: Hub
        rate_limit_per_interval:
          type: integer
          title: Rate Limit Per Interval
        rate_limit_interval:
          type: integer
          title: Rate Limit Interval
        value:
          type: string
          title: Value
        hub_config:
          anyOf:
            - $ref: '#/components/schemas/AWSHubConfig'
            - $ref: '#/components/schemas/GCPHubConfig'
            - $ref: '#/components/schemas/DigitalOceanHubConfig'
            - type: "null"
          title: Hub Config
      type: object
      required:
        - name
        - hub
        - rate_limit_per_interval
        - rate_limit_interval
        - value
      title: CreateApiKeyRequest
    CreateFeedbackRequest:
      properties:
        response_id:
          type: string
          title: Response Id
        detector_id:
          type: string
          title: Detector Id
        value:
          type: number
          title: Value
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
      type: object
      required:
        - response_id
        - detector_id
        - value
      title: CreateFeedbackRequest
    CreateHarnessConfigRequest:
      properties:
        probe_configs:
          items:
            $ref: '#/components/schemas/CreateProbeConfigRequest'
          type: array
          minItems: 1
          title: Probe Configs
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      type: object
      required:
        - probe_configs
      title: CreateHarnessConfigRequest
    CreateInviteRequest:
      properties:
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
        email:
          anyOf:
            - type: string
            - type: "null"
          title: Email
        team_role:
          anyOf:
            - type: string
            - type: "null"
          title: Team Role
          default: user
      type: object
      required:
        - team_id
        - email
      title: CreateInviteRequest
    CreateOrUpdateStageRequest:
      properties:
        harness_types:
          anyOf:
            - items:
                type: string
                enum:
                  - AGENT_POLICY
                  - KNOWLEDGE_BASE
                  - FUNCTION_ROUTE
                  - PERSONA
              type: array
            - type: "null"
          title: Harness Types
        harness_name:
          anyOf:
            - type: string
            - type: "null"
          title: Harness Name
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
        rag_params:
          anyOf:
            - $ref: '#/components/schemas/RagParams'
            - type: "null"
        function_route_params:
          anyOf:
            - $ref: '#/components/schemas/FunctionRouteParams'
            - type: "null"
        persona_params:
          anyOf:
            - $ref: '#/components/schemas/PersonaParams'
            - type: "null"
        base_model_name:
          anyOf:
            - type: string
            - type: "null"
          title: Base Model Name
        hub_name:
          anyOf:
            - type: string
            - type: "null"
          title: Hub Name
        max_output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Output Tokens
      type: object
      title: CreateOrUpdateStageRequest
    CreatePlaygroundAgentSessionInput:
      properties:
        id:
          type: string
          title: Id
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        agent_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Id
        system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: System Prompt
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
      type: object
      required:
        - id
        - hub
        - model
      title: CreatePlaygroundAgentSessionInput
    CreatePlaygroundInput:
      properties:
        id:
          type: string
          title: Id
        playground_type:
          type: string
          enum:
            - history
            - snapshot
          title: Playground Type
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      type: object
      required:
        - id
        - playground_type
      title: CreatePlaygroundInput
    CreatePlaygroundMessage:
      properties:
        id:
          anyOf:
            - type: string
            - type: "null"
          title: Id
        agent_session_id:
          type: string
          title: Agent Session Id
        completion_request:
          $ref: '#/components/schemas/CompletionRequest'
      type: object
      required:
        - agent_session_id
        - completion_request
      title: CreatePlaygroundMessage
    CreateProbeConfigRequest:
      properties:
        detector_ids:
          items:
            type: string
          type: array
          minItems: 1
          title: Detector Ids
        prompt_ids:
          items:
            type: string
          type: array
          minItems: 1
          title: Prompt Ids
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        id:
          anyOf:
            - type: string
            - type: "null"
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      type: object
      required:
        - detector_ids
        - prompt_ids
      title: CreateProbeConfigRequest
    CreatePromptRequest:
      properties:
        text:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
          title: Text
        tags:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tags
        id:
          anyOf:
            - type: string
            - type: "null"
          title: Id
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      required:
        - text
      title: CreatePromptRequest
    CreateTeamRequest:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      required:
        - name
      title: CreateTeamRequest
    CustomEvalConfigInputs:
      properties:
        include_security:
          type: boolean
          title: Include Security Tests
          description: Should security tests be included?
          default: false
          Subcategory: Security
          Taxonomy: Security
        security_prompt_count:
          type: integer
          maximum: 150
          minimum: 0
          title: Number of Security Test Prompts
          description: The number of security test prompts
          default: 20
          Subcategory: Security
          Taxonomy: Security
        include_toxicity:
          type: boolean
          title: Include Toxicity Tests
          description: Should toxic content generation tests be included?
          default: false
          Subcategory: Toxicity
          Taxonomy: Safety
        toxicity_prompt_count:
          type: integer
          maximum: 100
          minimum: 0
          title: Number of Toxicity Test Prompts
          description: The number of toxicity test prompts
          default: 20
          Subcategory: Toxicity
          Taxonomy: Safety
        include_stereotype:
          type: boolean
          title: Include Stereotype Tests
          description: Should stereotypical content generation tests be included?
          default: false
          Subcategory: Stereotype
          Taxonomy: Safety
        stereotype_prompt_count:
          type: integer
          maximum: 50
          minimum: 0
          title: Number of Stereotype Test Prompts
          description: The number of stereotype test prompts
          default: 20
          Subcategory: Stereotype
          Taxonomy: Safety
        include_correctness:
          type: boolean
          title: Include Correctness Tests
          description: Should correctness (system prompt + knowledge base) tests be included?
          default: false
          Subcategory: Correctness
          Taxonomy: Reliability
        correctness_prompt_count:
          type: integer
          maximum: 50
          minimum: 0
          title: Number of Correctness test Prompts
          description: The number of correctness test prompts
          default: 10
          Subcategory: Correctness
          Taxonomy: Reliability
        include_adherence:
          type: boolean
          title: Include System prompt and Policy Adherence Tests
          description: Should adherence tests be included?
          default: false
          Subcategory: Adherence
          Taxonomy: Safety
        adherence_prompt_count:
          type: integer
          maximum: 50
          minimum: 0
          title: Number of Adherence Test Prompts
          description: The number of adherence test prompts to use
          default: 10
          Subcategory: Adherence
          Taxonomy: Safety
        include_exfil:
          type: boolean
          title: Include Exfiltration Tests
          description: Should system prompt exfiltration tests be included?
          default: false
          Subcategory: Exfiltration
          Taxonomy: Security
        exfil_prompt_count:
          type: integer
          maximum: 50
          minimum: 0
          title: Number of Exfiltration Test Prompts
          description: The number of exfil test prompts to use
          default: 10
          Subcategory: Exfiltration
          Taxonomy: Security
        include_consistency:
          type: boolean
          title: Include Consistency Tests
          description: Should consistency tests be included?
          default: false
          Subcategory: Consistency
          Taxonomy: Reliability
        consistency_prompt_count:
          type: integer
          maximum: 50
          minimum: 0
          title: Number of Consistency Test Prompts
          description: The number of consistency test prompts to use
          default: 10
          Subcategory: Consistency
          Taxonomy: Reliability
        include_tool:
          type: boolean
          title: Include Tool-Calling Tests
          description: Should tool call tests be included?
          default: false
          Subcategory: ToolCalling
          Taxonomy: Reliability
        tool_prompt_count:
          type: integer
          maximum: 25
          minimum: 0
          title: Number of Tool-Calling Test Prompts
          description: The number of tool call test prompts to use
          default: 10
          Subcategory: ToolCalling
          Taxonomy: Reliability
        include_persona:
          type: boolean
          title: Include Persona Tests
          description: Should persona tests be included?
          default: false
          Subcategory: Persona
          Taxonomy: Reliability
        persona_goal_count:
          type: integer
          maximum: 10
          minimum: 0
          title: Number of Goals per Persona
          description: The number of goals for persona tests
          default: 5
          Subcategory: Persona
          Taxonomy: Reliability
        persona_prompts_per_goal:
          type: integer
          maximum: 25
          minimum: 0
          title: Number of Persona Test Prompts per Goal
          description: The number of persona prompts to use per goal
          default: 10
          Subcategory: Persona
          Taxonomy: Reliability
        harness_description:
          type: string
          title: Harness Description
          default: ""
      type: object
      title: CustomEvalConfigInputs
      description: Custom Evaluation Inputs - this controls which tests to run and their params
    DeleteEvaluationResponse:
      properties:
        evaluation_id:
          type: string
          title: Evaluation Id
        status:
          type: string
          title: Status
        message:
          type: string
          title: Message
      type: object
      required:
        - evaluation_id
        - status
        - message
      title: DeleteEvaluationResponse
    DetectionInput:
      properties:
        id:
          type: string
          title: Id
        detection_id:
          type: string
          title: Detection Id
          default: ""
        response:
          anyOf:
            - type: string
            - type: "null"
          title: Response
          default: ""
        triggers:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Triggers
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          title: Ground Truth
        question:
          anyOf:
            - type: string
            - type: "null"
          title: Question
        contexts:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Contexts
        instructions:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Instructions
        kwargs:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          title: Kwargs
        conversation_history:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: "null"
          title: Conversation History
        multiturn_params:
          anyOf:
            - $ref: '#/components/schemas/MultiturnDetectionParams'
            - type: "null"
        forbidden_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Forbidden Prompt
        role:
          anyOf:
            - type: string
            - type: "null"
          title: Role
        expected_tools:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Expected Tools
        input:
          anyOf:
            - type: string
            - type: "null"
          title: Input
        policy:
          anyOf:
            - type: string
            - type: "null"
          title: Policy
        created_at:
          type: integer
          title: Created At
        updated_at:
          type: integer
          title: Updated At
        created_by:
          type: string
          title: Created By
          default: ""
        status:
          type: string
          enum:
            - CREATED
            - DETECTING
            - COMPLETED
            - ERROR
          title: Status
          default: CREATED
      type: object
      title: DetectionInput
    DetectionOutput:
      properties:
        id:
          type: string
          title: Id
        detection_id:
          type: string
          title: Detection Id
          default: ""
        input_id:
          type: string
          title: Input Id
          default: ""
        score:
          type: number
          title: Score
          default: 0
        reason:
          anyOf:
            - type: string
            - type: "null"
          title: Reason
        error:
          anyOf:
            - type: string
            - type: "null"
          title: Error
        error_message:
          anyOf:
            - type: string
            - type: "null"
          title: Error Message
        created_at:
          type: integer
          title: Created At
        created_by:
          type: string
          title: Created By
          default: ""
      type: object
      title: DetectionOutput
    DetectionParams:
      properties:
        api_key_proxy:
          type: string
          title: Api Key Proxy
        hub:
          anyOf:
            - type: string
            - type: "null"
          title: Hub
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
      type: object
      required:
        - api_key_proxy
      title: DetectionParams
    DetectionRequest:
      properties:
        id:
          type: string
          title: Id
        detector_id:
          type: string
          title: Detector Id
        detector_params:
          $ref: '#/components/schemas/DetectionParams'
        detector_inputs:
          items:
            $ref: '#/components/schemas/DetectionRequestInput'
          type: array
          title: Detector Inputs
      type: object
      required:
        - id
        - detector_id
        - detector_params
        - detector_inputs
      title: DetectionRequest
    DetectionRequestInput:
      properties:
        response:
          anyOf:
            - type: string
            - type: "null"
          title: Response
          default: ""
        id:
          anyOf:
            - type: string
            - type: "null"
          title: Id
        triggers:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Triggers
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          title: Ground Truth
        question:
          anyOf:
            - type: string
            - type: "null"
          title: Question
        contexts:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Contexts
        instructions:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Instructions
        kwargs:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          title: Kwargs
        forbidden_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Forbidden Prompt
        role:
          anyOf:
            - type: string
            - type: "null"
          title: Role
        expected_tools:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Expected Tools
        input:
          anyOf:
            - type: string
            - type: "null"
          title: Input
        policy:
          anyOf:
            - type: string
            - type: "null"
          title: Policy
      type: object
      title: DetectionRequestInput
    DetectionResponse:
      properties:
        id:
          type: string
          title: Id
        detector_id:
          type: string
          title: Detector Id
        status:
          type: string
          title: Status
        detector_inputs:
          anyOf:
            - items:
                $ref: '#/components/schemas/DetectionInput'
              type: array
            - type: "null"
          title: Detector Inputs
        detector_outputs:
          anyOf:
            - items:
                $ref: '#/components/schemas/DetectionOutput'
              type: array
            - type: "null"
          title: Detector Outputs
      type: object
      required:
        - id
        - detector_id
        - status
        - detector_inputs
        - detector_outputs
      title: DetectionResponse
    Detector:
      properties:
        id:
          type: string
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        detector_input:
          type: object
          title: Detector Input
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
      type: object
      required:
        - id
        - name
        - description
        - detector_input
        - version
      title: Detector
    DetectorResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/Detector'
          type: array
          title: Results
      type: object
      required:
        - results
      title: DetectorResponses
    DigitalOceanHubConfig:
      properties:
        agent_id:
          type: string
          title: Agent Id
        agent_key:
          type: string
          title: Agent Key
      type: object
      required:
        - agent_id
        - agent_key
      title: DigitalOceanHubConfig
    ErrorSummary:
      properties:
        cause:
          type: string
          title: Cause
        count:
          type: integer
          title: Count
      type: object
      required:
        - cause
        - count
      title: ErrorSummary
    EstimateRequest:
      properties:
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        api_key:
          type: string
          title: Api Key
        harness_config_ids:
          items:
            type: string
          type: array
          title: Harness Config Ids
        scenario_config_filters:
          items:
            type: string
          type: array
          title: Scenario Config Filters
        version:
          type: string
          title: Version
        agent_params:
          $ref: '#/components/schemas/AgentParams'
        is_lite:
          type: boolean
          title: Is Lite
        sample_size:
          anyOf:
            - type: integer
            - type: "null"
          title: Sample Size
      type: object
      required:
        - hub
        - model
        - api_key
        - harness_config_ids
        - scenario_config_filters
        - version
        - agent_params
        - is_lite
      title: EstimateRequest
    EvaluationCreatedResponse:
      properties:
        id:
          type: string
          title: Id
        status:
          type: string
          title: Status
      type: object
      required:
        - id
        - status
      title: EvaluationCreatedResponse
    EvaluationMetadata:
      properties:
        id:
          type: string
          title: Id
        evaluation_id:
          type: string
          title: Evaluation Id
          default: ""
        api_key_hash:
          type: string
          title: Api Key Hash
          default: ""
        hub:
          type: string
          title: Hub
          default: ""
        model:
          type: string
          title: Model
          default: ""
        url:
          type: string
          title: Url
          default: ""
        harness_config_ids:
          items:
            type: string
          type: array
          title: Harness Config Ids
        scenario_config_filters:
          items:
            type: string
          type: array
          title: Scenario Config Filters
        sample_size:
          anyOf:
            - type: integer
            - type: "null"
          title: Sample Size
        temperature:
          anyOf:
            - type: string
            - type: "null"
          title: Temperature
          default: "1.00"
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        top_p:
          anyOf:
            - type: string
            - type: "null"
          title: Top P
          default: "0.99"
        generations:
          type: integer
          title: Generations
          default: 1
        tags:
          items:
            type: string
          type: array
          title: Tags
        name:
          type: string
          title: Name
          default: ""
        version:
          type: string
          title: Version
          default: ""
        timeout:
          anyOf:
            - type: number
            - type: "null"
          title: Timeout
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
        agent_configuration_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Configuration Id
      type: object
      title: EvaluationMetadata
    EvaluationReportCreationRequest:
      properties:
        version:
          type: string
          title: Version
      type: object
      required:
        - version
      title: EvaluationReportCreationRequest
    EvaluationReportResponse:
      properties:
        report_id:
          type: string
          title: Report Id
        report_status:
          anyOf:
            - type: string
            - type: "null"
          title: Report Status
        report_status_message:
          anyOf:
            - type: string
            - type: "null"
          title: Report Status Message
        report_content:
          anyOf:
            - type: string
            - type: "null"
          title: Report Content
      type: object
      required:
        - report_id
      title: EvaluationReportResponse
    EvaluationRequest:
      properties:
        id:
          type: string
          title: Id
        api_key_proxy:
          type: string
          title: Api Key Proxy
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        harness_config_ids:
          items:
            type: string
          type: array
          title: Harness Config Ids
        scenario_config_filters:
          items:
            type: string
          type: array
          title: Scenario Config Filters
        agent_params:
          $ref: '#/components/schemas/AgentParams'
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        tags:
          items:
            type: string
          type: array
          title: Tags
        sample_size:
          anyOf:
            - type: integer
            - type: "null"
          title: Sample Size
        url:
          anyOf:
            - type: string
            - type: "null"
          title: Url
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
        agent_configuration_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Configuration Id
      type: object
      required:
        - id
        - api_key_proxy
        - hub
        - model
        - harness_config_ids
        - scenario_config_filters
        - agent_params
        - name
        - tags
      title: EvaluationRequest
    EvaluationResponse:
      properties:
        id:
          type: string
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        tags:
          items:
            type: string
          type: array
          title: Tags
        status:
          type: string
          title: Status
        cause:
          anyOf:
            - type: string
            - type: "null"
          title: Cause
        score:
          type: string
          title: Score
        model:
          type: string
          title: Model
        hub:
          type: string
          title: Hub
        url:
          type: string
          title: Url
        created_at:
          type: integer
          title: Created At
        completed_test_count:
          type: integer
          title: Completed Test Count
        total_test_count:
          type: integer
          title: Total Test Count
        created_by:
          type: string
          title: Created By
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        team_id:
          type: string
          title: Team Id
        completion_tokens:
          type: integer
          title: Completion Tokens
          default: 0
        prompt_tokens:
          type: integer
          title: Prompt Tokens
          default: 0
        total_tokens:
          type: integer
          title: Total Tokens
          default: 0
        version:
          type: string
          title: Version
          default: ""
        agent_configuration_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Configuration Id
      type: object
      required:
        - id
        - name
        - tags
        - status
        - cause
        - score
        - model
        - hub
        - url
        - created_at
        - completed_test_count
        - total_test_count
        - created_by
        - completed_at
        - team_id
      title: EvaluationResponse
    EvaluationResponseWithMetrics:
      properties:
        id:
          type: string
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        tags:
          items:
            type: string
          type: array
          title: Tags
        status:
          type: string
          title: Status
        cause:
          anyOf:
            - type: string
            - type: "null"
          title: Cause
        total_test_count:
          type: integer
          title: Total Test Count
        completed_test_count:
          type: integer
          title: Completed Test Count
        error_test_count:
          type: integer
          title: Error Test Count
        total_response_count:
          type: integer
          title: Total Response Count
        completed_response_count:
          type: integer
          title: Completed Response Count
        error_response_count:
          type: integer
          title: Error Response Count
        total_generation_time:
          type: integer
          title: Total Generation Time
        average_generation_time:
          type: integer
          title: Average Generation Time
        score:
          anyOf:
            - type: number
            - type: "null"
          title: Score
        status_counts:
          $ref: '#/components/schemas/StatusCounts'
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        url:
          type: string
          title: Url
        created_at:
          type: integer
          title: Created At
        created_by:
          type: string
          title: Created By
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        team_id:
          type: string
          title: Team Id
        restart_count:
          type: integer
          title: Restart Count
        metadata:
          anyOf:
            - $ref: '#/components/schemas/EvaluationMetadata'
            - type: "null"
        completion_tokens:
          type: integer
          title: Completion Tokens
          default: 0
        prompt_tokens:
          type: integer
          title: Prompt Tokens
          default: 0
        total_tokens:
          type: integer
          title: Total Tokens
          default: 0
        agent_configuration_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Configuration Id
      type: object
      required:
        - id
        - name
        - tags
        - status
        - cause
        - total_test_count
        - completed_test_count
        - error_test_count
        - total_response_count
        - completed_response_count
        - error_response_count
        - total_generation_time
        - average_generation_time
        - score
        - status_counts
        - hub
        - model
        - url
        - created_at
        - created_by
        - completed_at
        - team_id
        - restart_count
      title: EvaluationResponseWithMetrics
    EvaluationResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/EvaluationResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        current_page:
          type: integer
          title: Current Page
        page_size:
          type: integer
          title: Page Size
      type: object
      required:
        - results
        - count
        - current_page
        - page_size
      title: EvaluationResponses
    EvaluationScore:
      properties:
        score:
          type: object
          title: Score
      type: object
      required:
        - score
      title: EvaluationScore
    Event:
      properties:
        type:
          type: string
          enum:
            - LOGIN_COMPLETE
            - EVALUATION_CREATED
            - EVALUATION_COMPLETED
            - TEST_CREATED
            - TEST_COMPLETED
            - TEST_ERROR
            - REQUEST_COMPLETED
            - DETECTION_COMPLETED
            - WORKER_READY
            - START_EVALUATION
            - START_DETECTION
            - PROBE_DETECTION_COMPLETE
            - PROBE_DETECTION_ERROR
            - CANCEL_EVALUATION
            - DELETE_EVALUATION
            - EXECUTE_SYNC_DETECTION
            - SYNC_DETECTION_COMPLETED
            - DETECTION_TERMINAL_ERROR
            - CREATE_EVALUATION
            - CREATE_HARNESS_CONFIG
            - CREATE_HARNESS_CONFIG_CHAT
            - PROBE_CREATED
            - PROBE_COMPLETIONS_DONE
            - PROBE_ERROR
          title: Type
        id:
          type: string
          title: Id
        created_at:
          type: number
          title: Created At
        created_by:
          type: string
          title: Created By
          default: ""
        status:
          type: string
          title: Status
          default: ""
        data:
          type: object
          title: Data
        metadata:
          anyOf:
            - type: object
            - type: "null"
          title: Metadata
      type: object
      required:
        - type
      title: Event
    FileUpload:
      properties:
        created_by:
          type: string
          title: Created By
        team_id:
          type: string
          title: Team Id
        id:
          type: string
          title: Id
        created_at:
          type: integer
          title: Created At
        file_name:
          anyOf:
            - type: string
            - type: "null"
          title: File Name
        file_type:
          anyOf:
            - type: string
            - type: "null"
          title: File Type
        file_size:
          anyOf:
            - type: integer
            - type: "null"
          title: File Size
        upload_url:
          anyOf:
            - type: string
            - type: "null"
          title: Upload Url
        upload_expiration:
          anyOf:
            - type: integer
            - type: "null"
          title: Upload Expiration
        provider:
          anyOf:
            - type: string
            - type: "null"
          title: Provider
        checksum:
          anyOf:
            - type: string
            - type: "null"
          title: Checksum
        object_key:
          anyOf:
            - type: string
            - type: "null"
          title: Object Key
        is_verified:
          type: boolean
          title: Is Verified
          default: false
        verified_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Verified At
      type: object
      required:
        - created_by
        - team_id
      title: FileUpload
    FileUploadRequest:
      properties:
        file_name:
          type: string
          title: File Name
        file_type:
          type: string
          title: File Type
        file_size:
          type: integer
          title: File Size
        category:
          type: string
          enum:
            - AGENT_POLICY
            - KNOWLEDGE_BASE
            - FUNCTION_ROUTE
            - PERSONA
          title: Category
        checksum:
          type: string
          title: Checksum
      type: object
      required:
        - file_name
        - file_type
        - file_size
        - category
        - checksum
      title: FileUploadRequest
    FunctionRouteParams:
      properties:
        input_schema:
          type: string
          title: Input Schema
        output_schema:
          type: string
          title: Output Schema
        function_route:
          anyOf:
            - type: string
            - type: "null"
          title: Function Route
      type: object
      required:
        - input_schema
        - output_schema
        - function_route
      title: FunctionRouteParams
    GCPHubConfig:
      properties:
        region:
          type: string
          title: Region
        project_id:
          type: string
          title: Project Id
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
        refresh_token:
          type: string
          title: Refresh Token
      type: object
      required:
        - region
        - project_id
        - client_id
        - client_secret
        - refresh_token
      title: GCPHubConfig
    GetFileUploadsResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/CategorizedFileUpload'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: GetFileUploadsResponse
    GetPlaygroundMessageResponse:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/PlaygroundMessageResponse'
          type: array
          title: Messages
        total:
          type: integer
          title: Total
      type: object
      required:
        - messages
        - total
      title: GetPlaygroundMessageResponse
    GetResponseErrorsResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ErrorSummary'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: GetResponseErrorsResponse
    GetResponsesResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/Response'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        current_page:
          type: integer
          title: Current Page
        page_size:
          type: integer
          title: Page Size
      type: object
      required:
        - results
        - count
        - current_page
        - page_size
      title: GetResponsesResponse
    GetStagesResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/HarnessConfigStage'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        total:
          type: integer
          title: Total
      type: object
      required:
        - results
        - count
        - total
      title: GetStagesResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HarnessConfig:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        harness_type:
          type: string
          title: Harness Type
        is_leaf:
          type: boolean
          title: Is Leaf
        description:
          type: string
          title: Description
        harness_config_ids:
          items:
            type: string
          type: array
          title: Harness Config Ids
        scenario_config_ids:
          items:
            type: string
          type: array
          title: Scenario Config Ids
        version:
          type: string
          title: Version
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          title: Status
        scoring_function:
          type: string
          enum:
            - naive_mean_harness
          const: naive_mean_harness
          title: Scoring Function
          default: naive_mean_harness
        created_at:
          type: integer
          title: Created At
        team_id:
          type: string
          title: Team Id
          default: ""
        created_by:
          type: string
          title: Created By
          default: ""
      type: object
      required:
        - id
        - name
        - harness_type
        - is_leaf
        - description
        - harness_config_ids
        - scenario_config_ids
        - version
        - status
      title: HarnessConfig
    HarnessConfigStage:
      properties:
        created_by:
          type: string
          title: Created By
        created_at:
          type: integer
          title: Created At
        id:
          type: string
          title: Id
        harness_config_id:
          anyOf:
            - type: string
            - type: "null"
          title: Harness Config Id
        harness_name:
          anyOf:
            - type: string
            - type: "null"
          title: Harness Name
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
        status:
          type: string
          enum:
            - CREATED
            - STARTING
            - IN_PROGRESS
            - READING
            - CREATING
            - SAVING
            - COMPLETED
            - ERROR
          title: Status
          default: CREATED
        status_message:
          anyOf:
            - type: string
            - type: "null"
          title: Status Message
        agent_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Agent System Prompt
        started_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Started At
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        harness_config_version:
          anyOf:
            - type: string
            - type: "null"
          title: Harness Config Version
        harness_types:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Harness Types
        rag_params:
          anyOf:
            - type: object
            - type: "null"
          title: Rag Params
        function_route_params:
          anyOf:
            - type: object
            - type: "null"
          title: Function Route Params
        persona_params:
          anyOf:
            - type: object
            - type: "null"
          title: Persona Params
        base_model_name:
          anyOf:
            - type: string
            - type: "null"
          title: Base Model Name
        hub_name:
          anyOf:
            - type: string
            - type: "null"
          title: Hub Name
        max_output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Output Tokens
      type: object
      required:
        - created_by
      title: HarnessConfigStage
    HarnessConfigVersionsResponse:
      properties:
        results:
          items:
            type: string
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: HarnessConfigVersionsResponse
    HarnessConfigWithStaging:
      properties:
        harness_config:
          $ref: '#/components/schemas/HarnessConfig'
        staging:
          anyOf:
            - $ref: '#/components/schemas/StagingResponse'
            - type: "null"
      type: object
      required:
        - harness_config
      title: HarnessConfigWithStaging
    HarnessConfigsResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/HarnessConfigWithStaging'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        total:
          type: integer
          title: Total
      type: object
      required:
        - results
        - count
        - total
      title: HarnessConfigsResponse
    HarnessCreationChatRequest:
      properties:
        harness_config_id:
          type: string
          title: Harness Config Id
        harness_stage_id:
          type: string
          title: Harness Stage Id
        message_list:
          items:
            type: object
          type: array
          title: Message List
      type: object
      required:
        - harness_config_id
        - harness_stage_id
        - message_list
      title: HarnessCreationChatRequest
    HarnessCreationChatResponse:
      properties:
        message:
          type: string
          title: Message
        response_type:
          $ref: '#/components/schemas/ChatResponseTypeEnum'
      type: object
      required:
        - message
        - response_type
      title: HarnessCreationChatResponse
    HarnessResponse:
      properties:
        id:
          type: string
          title: Id
        evaluation_id:
          type: string
          title: Evaluation Id
        config_id:
          type: string
          title: Config Id
        harness_type:
          type: string
          title: Harness Type
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        version:
          type: string
          title: Version
        harness_ids:
          items:
            type: string
          type: array
          title: Harness Ids
        scenario_ids:
          items:
            type: string
          type: array
          title: Scenario Ids
        harness_config_ids:
          items:
            type: string
          type: array
          title: Harness Config Ids
        scenario_config_ids:
          items:
            type: string
          type: array
          title: Scenario Config Ids
        score:
          anyOf:
            - type: number
            - type: "null"
          title: Score
        is_leaf:
          type: boolean
          title: Is Leaf
        team_id:
          type: string
          title: Team Id
        completion_tokens:
          type: integer
          title: Completion Tokens
          default: 0
        prompt_tokens:
          type: integer
          title: Prompt Tokens
          default: 0
        total_tokens:
          type: integer
          title: Total Tokens
          default: 0
      type: object
      required:
        - id
        - evaluation_id
        - config_id
        - harness_type
        - name
        - description
        - version
        - harness_ids
        - scenario_ids
        - harness_config_ids
        - scenario_config_ids
        - score
        - is_leaf
        - team_id
      title: HarnessResponse
    HarnessResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/HarnessResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: HarnessResponses
    HubConfigResponse:
      properties:
        region:
          anyOf:
            - type: string
            - type: "null"
          title: Region
        project_id:
          anyOf:
            - type: string
            - type: "null"
          title: Project Id
        client_id:
          anyOf:
            - type: string
            - type: "null"
          title: Client Id
        display_client_secret:
          anyOf:
            - type: string
            - type: "null"
          title: Display Client Secret
        display_access_key:
          anyOf:
            - type: string
            - type: "null"
          title: Display Access Key
        display_secret_access_key:
          anyOf:
            - type: string
            - type: "null"
          title: Display Secret Access Key
        agent_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Id
        display_agent_key:
          anyOf:
            - type: string
            - type: "null"
          title: Display Agent Key
      type: object
      title: HubConfigResponse
    HubResponse:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          enum:
            - openai
            - anthropic
            - together
            - mistral
            - fireworks
            - nvidia
            - vertex
            - bedrock
            - bedrock_custom
            - digitalocean
            - azure
            - custom
            - openrouter
            - bedrockAgents
          title: Name
        display_name:
          type: string
          title: Display Name
        models:
          items:
            type: string
          type: array
          title: Models
        rate_limit_per_interval:
          type: integer
          title: Rate Limit Per Interval
          default: 0
        rate_limit_interval:
          type: integer
          title: Rate Limit Interval
          default: 60
      type: object
      required:
        - id
        - name
        - display_name
        - models
      title: HubResponse
    InviteResponse:
      properties:
        invite_id:
          type: string
          title: Invite Id
        team_id:
          type: string
          title: Team Id
        team_role:
          type: string
          title: Team Role
        user_id:
          type: string
          title: User Id
        email:
          type: string
          title: Email
        status:
          type: string
          title: Status
        created_at:
          type: integer
          title: Created At
        created_by:
          type: string
          title: Created By
        updated_at:
          type: integer
          title: Updated At
        updated_by:
          type: string
          title: Updated By
      type: object
      required:
        - invite_id
        - team_id
        - team_role
        - user_id
        - email
        - status
        - created_at
        - created_by
        - updated_at
        - updated_by
      title: InviteResponse
    InviteResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/InviteResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: InviteResponses
    LeaderboardEntry:
      properties:
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        score:
          type: number
          title: Score
        hallucination:
          type: number
          title: Hallucination
        robustness:
          type: number
          title: Robustness
        toxicity:
          type: number
          title: Toxicity
        fairness:
          type: number
          title: Fairness
        ethics:
          type: number
          title: Ethics
        security:
          type: number
          title: Security
        privacy:
          type: number
          title: Privacy
        stereotypes:
          type: number
          title: Stereotypes
        performance:
          type: number
          title: Performance
      type: object
      required:
        - hub
        - model
        - score
        - hallucination
        - robustness
        - toxicity
        - fairness
        - ethics
        - security
        - privacy
        - stereotypes
        - performance
      title: LeaderboardEntry
    ManualCustomHarnessCreationRequest:
      properties:
        harness_staging_id:
          type: string
          title: Harness Staging Id
        eval_config_input:
          $ref: '#/components/schemas/CustomEvalConfigInputs'
      type: object
      required:
        - harness_staging_id
        - eval_config_input
      title: ManualCustomHarnessCreationRequest
    ManualCustomHarnessCreationResponse:
      properties:
        event_data:
          type: object
          title: Event Data
      type: object
      required:
        - event_data
      title: ManualCustomHarnessCreationResponse
    ModelCost:
      properties:
        input_cost:
          anyOf:
            - type: number
            - type: "null"
          title: Input Cost
        output_cost:
          anyOf:
            - type: number
            - type: "null"
          title: Output Cost
        total_cost:
          anyOf:
            - type: number
            - type: "null"
          title: Total Cost
      type: object
      title: ModelCost
    ModelResponse:
      properties:
        models:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Models
      type: object
      title: ModelResponse
    MultiturnDetectionParams:
      properties:
        max_turns:
          type: integer
          title: Max Turns
          default: 10
        branching_factor:
          type: integer
          title: Branching Factor
          default: 10
      type: object
      title: MultiturnDetectionParams
    NgrokTokenResponse:
      properties:
        token:
          anyOf:
            - type: string
            - type: "null"
          title: Token
        domain:
          anyOf:
            - type: string
            - type: "null"
          title: Domain
      type: object
      title: NgrokTokenResponse
    PersonaParams:
      properties:
        persona_ids:
          items:
            type: string
          type: array
          title: Persona Ids
      type: object
      required:
        - persona_ids
      title: PersonaParams
    PlaygroundAgentSessionResponse:
      properties:
        id:
          type: string
          title: Id
        playground_id:
          type: string
          title: Playground Id
        session_status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          title: Session Status
        hub:
          type: string
          title: Hub
        model:
          type: string
          title: Model
        agent_id:
          anyOf:
            - type: string
            - type: "null"
          title: Agent Id
        system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: System Prompt
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
      type: object
      required:
        - id
        - playground_id
        - session_status
        - hub
        - model
      title: PlaygroundAgentSessionResponse
    PlaygroundAttackInput:
      properties:
        attacker_name:
          type: string
          enum:
            - LeetSpeakPlusAttacker
            - AuthorityAttacker
            - ZalgoAttacker
            - MisrepresentationAttacker
            - InjectJSONAttacker
            - JSONInjectionAttacker
          title: Attacker Name
        text:
          type: string
          title: Text
      type: object
      required:
        - attacker_name
        - text
      title: PlaygroundAttackInput
      description: Playground Attack Input
    PlaygroundAttackResponse:
      properties:
        text:
          type: string
          title: Text
        attacker_name:
          type: string
          title: Attacker Name
      type: object
      required:
        - text
        - attacker_name
      title: PlaygroundAttackResponse
      description: Playground Attack Response
    PlaygroundMessageResponse:
      properties:
        id:
          type: string
          title: Id
        playground_id:
          type: string
          title: Playground Id
        agent_session_id:
          type: string
          title: Agent Session Id
        role:
          type: string
          title: Role
        content:
          type: string
          title: Content
        detection_id:
          anyOf:
            - type: string
            - type: "null"
          title: Detection Id
        score:
          anyOf:
            - type: number
            - type: "null"
          title: Score
        created_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Created At
        updated_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Updated At
      type: object
      required:
        - id
        - playground_id
        - agent_session_id
        - role
        - content
      title: PlaygroundMessageResponse
    PlaygroundsResponse:
      properties:
        id:
          type: string
          title: Id
        playground_type:
          type: string
          enum:
            - history
            - snapshot
          title: Playground Type
        session_status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          title: Session Status
        name:
          type: string
          title: Name
          default: ""
      type: object
      required:
        - id
        - playground_type
        - session_status
      title: PlaygroundsResponse
    ProbeConfig:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        goals:
          items:
            type: string
          type: array
          title: Goals
        tags:
          items:
            type: string
          type: array
          title: Tags
        detector_ids:
          items:
            type: string
          type: array
          title: Detector Ids
        prompt_ids:
          items:
            type: string
          type: array
          title: Prompt Ids
        version:
          type: string
          title: Version
        scoring_function:
          type: string
          enum:
            - naive_mean_probe_min
            - naive_mean_probe_max
            - tinybench_score_probe_min
            - tinybench_score_probe_max
            - final_score_probe
            - leaf_score_probe
          title: Scoring Function
          default: naive_mean_probe_min
        max_turns:
          type: integer
          title: Max Turns
          default: 1
        branching_factor:
          type: integer
          title: Branching Factor
          default: 1
        max_tests:
          type: integer
          title: Max Tests
          default: 1
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        team_id:
          type: string
          title: Team Id
          default: ""
      type: object
      required:
        - id
        - name
        - goals
        - tags
        - detector_ids
        - prompt_ids
        - version
      title: ProbeConfig
    ProbeConfigResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ProbeConfig'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        total:
          type: integer
          title: Total
      type: object
      required:
        - results
        - count
        - total
      title: ProbeConfigResponse
    ProbeResponse:
      properties:
        id:
          type: string
          title: Id
        config_id:
          type: string
          title: Config Id
        evaluation_id:
          type: string
          title: Evaluation Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        goals:
          items:
            type: string
          type: array
          title: Goals
        tags:
          items:
            type: string
          type: array
          title: Tags
        prompt_ids:
          items:
            type: string
          type: array
          title: Prompt Ids
        prompt_config_ids:
          items:
            type: string
          type: array
          title: Prompt Config Ids
        scoring_function:
          type: string
          title: Scoring Function
        detector_ids:
          type: string
          title: Detector Ids
        uri:
          type: string
          title: Uri
        probe:
          type: string
          title: Probe
        score:
          anyOf:
            - type: number
            - type: "null"
          title: Score
        expected_response_count:
          type: integer
          title: Expected Response Count
        team_id:
          type: string
          title: Team Id
          default: ""
        completion_tokens:
          type: integer
          title: Completion Tokens
          default: 0
        prompt_tokens:
          type: integer
          title: Prompt Tokens
          default: 0
        total_tokens:
          type: integer
          title: Total Tokens
          default: 0
      type: object
      required:
        - id
        - config_id
        - evaluation_id
        - name
        - description
        - goals
        - tags
        - prompt_ids
        - prompt_config_ids
        - scoring_function
        - detector_ids
        - uri
        - probe
        - score
        - expected_response_count
      title: ProbeResponse
    ProbeResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ProbeResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: ProbeResponses
    Prompt:
      properties:
        id:
          type: string
          title: Id
        config_id:
          type: string
          title: Config Id
        text:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
          title: Text
        tags:
          items:
            type: string
          type: array
          title: Tags
        description:
          type: string
          title: Description
          default: ""
        is_runtime:
          type: boolean
          title: Is Runtime
          default: false
        created_at:
          type: integer
          title: Created At
        team_id:
          type: string
          title: Team Id
          default: ""
      type: object
      required:
        - id
        - config_id
        - text
        - tags
      title: Prompt
    PromptResponse:
      properties:
        id:
          type: string
          title: Id
        config_id:
          type: string
          title: Config Id
        text:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
          title: Text
        tags:
          items:
            type: string
          type: array
          title: Tags
        description:
          type: string
          title: Description
          default: ""
        team_id:
          type: string
          title: Team Id
          default: ""
      type: object
      required:
        - id
        - config_id
        - text
        - tags
      title: PromptResponse
    PromptResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
          title: Results
        current_page:
          type: integer
          title: Current Page
        page_size:
          type: integer
          title: Page Size
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - current_page
        - page_size
        - count
      title: PromptResponses
    PutProbeConfigBody:
      properties:
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        detector_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Detector Ids
        prompt_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Prompt Ids
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      title: PutProbeConfigBody
    PutPromptRequest:
      properties:
        text:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: "null"
          title: Text
        tags:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tags
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      title: PutPromptRequest
    RagParams:
      properties:
        bucket_name:
          type: string
          title: Bucket Name
      type: object
      required:
        - bucket_name
      title: RagParams
    ReportIdsResponse:
      properties:
        report_ids:
          items:
            type: string
          type: array
          title: Report Ids
      type: object
      required:
        - report_ids
      title: ReportIdsResponse
    Response:
      properties:
        id:
          type: string
          title: Id
        test_id:
          type: string
          title: Test Id
          default: ""
        evaluation_id:
          type: string
          title: Evaluation Id
          default: ""
        input_prompt_id:
          type: string
          title: Input Prompt Id
          default: ""
        triggers:
          items: {}
          type: array
          title: Triggers
        prompt_group:
          items: {}
          type: array
          title: Prompt Group
        input_prompt:
          type: string
          title: Input Prompt
          default: ""
        prompt_index:
          type: integer
          title: Prompt Index
          default: 0
        probe_id:
          type: string
          title: Probe Id
          default: ""
        probe_config_id:
          type: string
          title: Probe Config Id
          default: ""
        response:
          type: string
          title: Response
          default: ""
        generation:
          type: integer
          title: Generation
          default: 1
        status:
          type: string
          enum:
            - CREATED
            - GENERATED
            - COMPLETED
            - ERROR
            - CANCELED
            - SKIP
          title: Status
          default: CREATED
        error_message:
          anyOf:
            - type: string
            - type: "null"
          title: Error Message
        detector_ids:
          type: string
          title: Detector Ids
          default: ""
        detector_scores:
          items:
            type: object
          type: array
          title: Detector Scores
        score:
          type: object
          title: Score
        created_at:
          type: integer
          title: Created At
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        team_id:
          type: string
          title: Team Id
          default: ""
        prompt:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
          title: Prompt
        is_visible:
          type: boolean
          title: Is Visible
          default: true
      type: object
      title: Response
    ResultsFeedbackResponse:
      properties:
        id:
          type: string
          title: Id
        response_id:
          type: string
          title: Response Id
        detector_id:
          type: string
          title: Detector Id
        created_by:
          type: string
          title: Created By
        value:
          type: number
          title: Value
        created_at:
          type: integer
          title: Created At
        evaluation_id:
          anyOf:
            - type: string
            - type: "null"
          title: Evaluation Id
        prompt_id:
          anyOf:
            - type: string
            - type: "null"
          title: Prompt Id
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
      type: object
      required:
        - id
        - response_id
        - detector_id
        - created_by
        - value
        - created_at
      title: ResultsFeedbackResponse
    ScenarioConfig:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        probe_ids:
          items:
            type: string
          type: array
          title: Probe Ids
        description:
          type: string
          title: Description
        version:
          type: string
          title: Version
        scoring_function:
          type: string
          enum:
            - naive_mean_scenario
          const: naive_mean_scenario
          title: Scoring Function
          default: naive_mean_scenario
        team_id:
          type: string
          title: Team Id
          default: ""
      type: object
      required:
        - id
        - name
        - probe_ids
        - description
        - version
      title: ScenarioConfig
    ScenarioConfigResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ScenarioConfig'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: ScenarioConfigResponse
    ScenarioResponse:
      properties:
        id:
          type: string
          title: Id
        config_id:
          type: string
          title: Config Id
        evaluation_id:
          type: string
          title: Evaluation Id
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        version:
          type: string
          title: Version
        probe_ids:
          items:
            type: string
          type: array
          title: Probe Ids
        probe_config_ids:
          items:
            type: string
          type: array
          title: Probe Config Ids
        score:
          anyOf:
            - type: number
            - type: "null"
          title: Score
        team_id:
          type: string
          title: Team Id
        completion_tokens:
          type: integer
          title: Completion Tokens
          default: 0
        prompt_tokens:
          type: integer
          title: Prompt Tokens
          default: 0
        total_tokens:
          type: integer
          title: Total Tokens
          default: 0
      type: object
      required:
        - id
        - config_id
        - evaluation_id
        - name
        - description
        - version
        - probe_ids
        - probe_config_ids
        - score
        - team_id
      title: ScenarioResponse
    ScenarioResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ScenarioResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: ScenarioResponses
    SetUserRoleRequest:
      properties:
        team_role:
          type: string
          enum:
            - admin
            - user
          title: Team Role
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
      type: object
      required:
        - team_role
      title: SetUserRoleRequest
    StagingResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/HarnessConfigStage'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: StagingResponse
    StatusCounts:
      properties:
        probes:
          additionalProperties:
            type: integer
          type: object
          title: Probes
        tests:
          additionalProperties:
            type: integer
          type: object
          title: Tests
        responses:
          additionalProperties:
            type: integer
          type: object
          title: Responses
      type: object
      title: StatusCounts
    TeamResponse:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        is_single_user:
          type: boolean
          title: Is Single User
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      required:
        - id
        - name
        - is_single_user
      title: TeamResponse
    TestResponses:
      properties:
        results:
          items:
            $ref: '#/components/schemas/VijilTest'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        current_page:
          type: integer
          title: Current Page
        page_size:
          type: integer
          title: Page Size
      type: object
      required:
        - results
        - count
        - current_page
        - page_size
      title: TestResponses
    TokenCount:
      properties:
        completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Completion Tokens
        prompt_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Prompt Tokens
        total_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Total Tokens
      type: object
      title: TokenCount
    UpdateApiKeyRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        rate_limit_per_interval:
          anyOf:
            - type: integer
            - type: "null"
          title: Rate Limit Per Interval
        rate_limit_interval:
          anyOf:
            - type: integer
            - type: "null"
          title: Rate Limit Interval
        value:
          anyOf:
            - type: string
            - type: "null"
          title: Value
        hub_config:
          anyOf:
            - {}
            - type: "null"
          title: Hub Config
        status:
          anyOf:
            - type: string
            - type: "null"
          title: Status
      type: object
      title: UpdateApiKeyRequest
    UpdateEvaluationRequest:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
        - name
      title: UpdateEvaluationRequest
    UpdateFeedbackRequest:
      properties:
        value:
          anyOf:
            - type: number
            - type: "null"
          title: Value
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
      type: object
      title: UpdateFeedbackRequest
    UpdatePlaygroundAgentSessionInput:
      properties:
        session_status:
          anyOf:
            - type: string
              enum:
                - ACTIVE
                - INACTIVE
            - type: "null"
          title: Session Status
        system_prompt:
          anyOf:
            - type: string
            - type: "null"
          title: System Prompt
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        max_completion_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Completion Tokens
        top_p:
          anyOf:
            - type: number
            - type: "null"
          title: Top P
      type: object
      title: UpdatePlaygroundAgentSessionInput
    UpdatePlaygroundInput:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        session_status:
          anyOf:
            - type: string
              enum:
                - ACTIVE
                - INACTIVE
            - type: "null"
          title: Session Status
      type: object
      title: UpdatePlaygroundInput
    UpdatePlaygroundMessage:
      properties:
        detection_id:
          type: string
          title: Detection Id
        score:
          type: number
          title: Score
      type: object
      required:
        - detection_id
        - score
      title: UpdatePlaygroundMessage
    UpdateTeamRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
      type: object
      title: UpdateTeamRequest
    UserResponse:
      properties:
        user_id:
          type: string
          title: User Id
        email:
          type: string
          title: Email
        family_name:
          type: string
          title: Family Name
        given_name:
          type: string
          title: Given Name
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          title: Status
        profile_image:
          anyOf:
            - type: string
            - type: "null"
          title: Profile Image
        created_at:
          type: integer
          title: Created At
        updated_at:
          type: integer
          title: Updated At
        team_id:
          anyOf:
            - type: string
            - type: "null"
          title: Team Id
        team_role:
          anyOf:
            - type: string
              enum:
                - admin
                - user
            - type: "null"
          title: Team Role
      type: object
      required:
        - user_id
        - email
        - family_name
        - given_name
        - status
        - profile_image
        - created_at
        - updated_at
      title: UserResponse
    UsersResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
      type: object
      required:
        - results
        - count
      title: UsersResponse
    UsersResponseWithPaging:
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        current_page:
          type: integer
          title: Current Page
        page_size:
          type: integer
          title: Page Size
      type: object
      required:
        - results
        - count
        - current_page
        - page_size
      title: UsersResponseWithPaging
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    VijilTest:
      properties:
        id:
          type: string
          title: Id
        evaluation_id:
          type: string
          title: Evaluation Id
          default: ""
        input_prompt_id:
          type: string
          title: Input Prompt Id
        input_prompt:
          type: string
          title: Input Prompt
          default: ""
        prompt_index:
          type: integer
          title: Prompt Index
          default: 0
        probe_id:
          type: string
          title: Probe Id
          default: ""
        probe_config_id:
          type: string
          title: Probe Config Id
          default: ""
        api_key_hash:
          type: string
          title: Api Key Hash
          default: ""
        model:
          type: string
          title: Model
          default: ""
        hub:
          type: string
          title: Hub
          default: ""
        url:
          anyOf:
            - type: string
            - type: "null"
          title: Url
        remaining_retries:
          type: integer
          title: Remaining Retries
          default: 1
        response:
          type: string
          title: Response
          default: ""
        generation:
          type: integer
          title: Generation
          default: 1
        status:
          type: string
          title: Status
          default: CREATED
        detector_ids:
          type: string
          title: Detector Ids
          default: ""
        error_message:
          anyOf:
            - type: string
            - type: "null"
          title: Error Message
        created_at:
          type: integer
          title: Created At
        started_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Started At
        completed_at:
          anyOf:
            - type: integer
            - type: "null"
          title: Completed At
        team_id:
          type: string
          title: Team Id
          default: ""
        parent_test_id:
          type: string
          title: Parent Test Id
          default: ""
        child_test_ids:
          items:
            type: string
          type: array
          title: Child Test Ids
        is_final_test:
          type: boolean
          title: Is Final Test
          default: false
      type: object
      title: VijilTest
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
tags:
  - name: Evaluation
    description: Operations with evaluations.
  - name: Harness
    description: Operations with harnesses.
  - name: Scenario
    description: Operations with scenarios.
  - name: Probe
    description: Operations with probes.
  - name: Prompt
    description: Operations with prompts.
  - name: Response
    description: Operations with responses.
  - name: Detector
    description: Operations with detectors.
  - name: API Key
    description: Operations with API keys.
  - name: Hub
    description: Operations with hubs.
  - name: Test
    description: Operations with tests.
  - name: Users
    description: Operations with users.
  - name: Teams
    description: Operations with teams.
  - name: Invite
    description: Operations with invites.
  - name: Events
    description: Operations with events.
  - name: Leaderboard
    description: Operations with leaderboard.
  - name: User Feedback
    description: Operations on user feedback.
  - name: Chat Completion
    description: Operations with chat completions.
  - name: Monitoring
    description: Vijil app monitoring.
